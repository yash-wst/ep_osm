
-module(dig_ep_osm_mscheme).
-compile(export_all).
-include("records.hrl").
-include_lib("nitrogen_core/include/wf.hrl").


%------------------------------------------------------------------------------
% main
%------------------------------------------------------------------------------

main() ->
	ita:auth(?APPOSM, ?MODULE, #template {file="lib/itx/priv/static/templates/html/entered_nomenu.html"}).

title() ->
	?LN("Marking Scheme").

heading() ->
	title().


%------------------------------------------------------------------------------
% records
%------------------------------------------------------------------------------



%------------------------------------------------------------------------------
% access
%------------------------------------------------------------------------------
access(_, ?APPOSM_ADMIN) -> true;
access(_, _) -> false.



%------------------------------------------------------------------------------
% function - get
%------------------------------------------------------------------------------

get() ->
	#dig {
		module=?MODULE,
		filters=[
			?OSMMSC(name),
			?OSMMSC(state)
		]
	}.


%------------------------------------------------------------------------------
% function - title
%------------------------------------------------------------------------------
digtitle() ->
	?LN("Marking Scheme").



%------------------------------------------------------------------------------
% function - init
%------------------------------------------------------------------------------
init() ->
	ok.


%------------------------------------------------------------------------------
% function - fetch
%------------------------------------------------------------------------------

%..............................................................................
%
% [_]
%
%..............................................................................
fetch(D, From, Size, Fs) ->

	%
	% get docs
	%
	#db2_find_response {docs=Docs} = db2es_find:get_by_fs(
		ep_osm_mscheme_api:db(), Fs, From, Size
	),


	%
	% layout
	%
	Results = lists:map(fun(Doc) ->
		[
			#dcell {val=itf:val(Doc, name)},
			#dcell {val=helper:titlecase(itf:val(Doc, state))},
			#dcell {val=#link {
				text="Update State",
				url=io_lib:format("/ep_osm_mscheme?mode=update&id=~s", [itf:idval(Doc)])
			}},
			#dcell {val=#link {
				text="Edit",
				url=io_lib:format("/ep_osm_mscheme?mode=edit&id=~s", [itf:idval(Doc)])
			}}
		]
	end, Docs),


	%
	% header
	%
	Header = [
		#dcell {type=header, val="Name"},
		#dcell {type=header, val="State"},
		#dcell {type=header, val="Update"},
		#dcell {type=header, val="Edit"}
	],


	%
	% return
	%
	{
		D#dig {
			total=?INFINITY
		},
		[Header] ++ Results
	}.


%------------------------------------------------------------------------------
% function - exports
%------------------------------------------------------------------------------
exports() -> [
].



%------------------------------------------------------------------------------
% layouts
%------------------------------------------------------------------------------
layout() ->
	dig:dig(?MODULE:get()).



%------------------------------------------------------------------------------
% events
%------------------------------------------------------------------------------
event({itx, E}) ->
	ite:event(E).



%------------------------------------------------------------------------------
% handler
%------------------------------------------------------------------------------



%------------------------------------------------------------------------------
% misc
%------------------------------------------------------------------------------



%------------------------------------------------------------------------------
% end
%------------------------------------------------------------------------------
